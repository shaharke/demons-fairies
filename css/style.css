@font-face {
  font-family: "Copystruct";
  src: url('fonts/copystruct/COPYN.woff') format('woff'), url('fonts/copystruct/COPYN.ttf') format('truetype'), url('fonts/copystruct/COPYN.eot') format('embedded-opentype'), url('fonts/copystruct/COPYN.svg') format('svg');
}

@font-face {
  font-family: "Bebas";
  src: url('fonts/bebas/BebasNeue.woff') format('woff'), url('fonts/bebas/BebasNeue.ttf') format('truetype'), url('fonts/bebas/BebasNeue.eot') format('embedded-opentype'), url('fonts/bebas/BebasNeue.svg') format('svg');
}

@font-face {
  font-family: "SourceSans";
  src: url('fonts/source-sans/SourceSansPro-Regular.woff') format('woff'), url('fonts/source-sans/SourceSansPro-Regular.ttf') format('truetype'), url('fonts/source-sans/SourceSansPro-Regular.eot') format('embedded-opentype'), url('fonts/source-sans/SourceSansPro-Regular.svg') format('svg');
}

/*
   So you like the style of impress.js demo?
   Or maybe you are just curious how it was done?

   You couldn't find a better place to find out!

   Welcome to the stylesheet impress.js demo presentation.

   Please remember that it is not meant to be a part of impress.js and is
   not required by impress.js.
   I expect that anyone creating a presentation for impress.js would create
   their own set of styles.

   But feel free to read through it and learn how to get the most of what
   impress.js provides.

   And let me be your guide.

   Shall we begin?
*/
/*
   We start with a good ol' reset.
   That's the one by Eric Meyer http://meyerweb.com/eric/tools/css/reset/

   You can probably argue if it is needed here, or not, but for sure it
   doesn't do any harm and gives us a fresh start.
*/
/* line 68, ../sass/style.scss */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
/* line 79, ../sass/style.scss */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

/* line 83, ../sass/style.scss */
body {
  line-height: 1;
}

/* line 87, ../sass/style.scss */
ol, ul {
  list-style: none;
}

/* line 91, ../sass/style.scss */
blockquote, q {
  quotes: none;
}

/* line 96, ../sass/style.scss */
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

/* line 101, ../sass/style.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 106, ../sass/style.scss */
body {
  font-family: "SourceSans";
  min-height: 740px;
}

/*
    Now let's bring some text styles back ...
*/
/* line 114, ../sass/style.scss */
b, strong {
  font-weight: bold;
}

/* line 118, ../sass/style.scss */
i, em {
  font-style: italic;
}

/*
    ... and give links a nice look.
*/
/* line 125, ../sass/style.scss */
a {
  color: inherit;
  text-decoration: none;
  padding: 0 0.1em;
  background: rgba(255, 255, 255, 0.5);
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.9);
  border-radius: 0.2em;
  -webkit-transition: 0.5s;
  -moz-transition: 0.5s;
  -ms-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

/* line 141, ../sass/style.scss */
a:hover,
a:focus {
  background: white;
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.5);
}

/*
    Because the main point behind the impress.js demo is to demo impress.js
    we display a fallback message for users with browsers that don't support
    all the features required by it.

    All of the content will be still fully accessible for them, but I want
    them to know that they are missing something - that's what the demo is
    about, isn't it?

    And then we hide the message, when support is detected in the browser.
*/
/* line 158, ../sass/style.scss */
.fallback-message {
  font-family: sans-serif;
  line-height: 1.3;
  width: 780px;
  padding: 10px 10px 0;
  margin: 20px auto;
  border: 1px solid #E4C652;
  border-radius: 10px;
  background: #EEDC94;
}

/* line 171, ../sass/style.scss */
.fallback-message p {
  margin-bottom: 10px;
}

/* line 175, ../sass/style.scss */
.impress-supported .fallback-message {
  display: none;
}

/*
    Now let's style the presentation steps.

    We start with basics to make sure it displays correctly in everywhere ...
*/
/* line 185, ../sass/style.scss */
.step {
  position: relative;
  width: 900px;
  padding: 40px;
  margin: 20px auto;
  font-family: "SourceSans";
  font-size: 48px;
  line-height: 1.5;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/*
    ... and we enhance the styles for impress.js.

    Basically we remove the margin and make inactive steps a little bit transparent.
*/
/* line 203, ../sass/style.scss */
.impress-enabled .step {
  margin: 0;
  opacity: 0.3;
  -webkit-transition: opacity 1s;
  -moz-transition: opacity 1s;
  -ms-transition: opacity 1s;
  -o-transition: opacity 1s;
  transition: opacity 1s;
}
/* line 213, ../sass/style.scss */
.impress-enabled .step.active {
  opacity: 1;
}

/* line 220, ../sass/style.scss */
.container {
  height: 700px;
  width: 960px;
}

/* line 227, ../sass/style.scss */
#slide1 .container {
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #82251a), color-stop(100%, #eddfdd));
  background-image: -webkit-linear-gradient(#82251a, #eddfdd);
  background-image: -moz-linear-gradient(#82251a, #eddfdd);
  background-image: -o-linear-gradient(#82251a, #eddfdd);
  background-image: linear-gradient(#82251a, #eddfdd);
}
/* line 231, ../sass/style.scss */
#slide1 .content {
  background-image: url("../images/slide1-bg.png");
  width: 950px;
  height: 700px;
}
/* line 236, ../sass/style.scss */
#slide1 .content::after {
  clear: both;
}
/* line 241, ../sass/style.scss */
#slide1 #arrow-text {
  font-family: "Copystruct";
  position: absolute;
  top: 356px;
  left: 60px;
  font-size: 20px;
  width: 243px;
  color: #30A1D3;
  -webkit-transform: rotate(-13deg);
  -moz-transform: rotate(-13deg);
  -ms-transform: rotate(-13deg);
  -o-transform: rotate(-13deg);
  transform: rotate(-13deg);
}
/* line 253, ../sass/style.scss */
#slide1 .slide-text {
  line-height: 48px;
  width: 600px;
  position: absolute;
  color: #AF2819;
  top: 520px;
  font-size: 38px;
  left: 200px;
}

/* line 267, ../sass/style.scss */
#slide2 .content {
  background-image: url("../images/slide2-bg.png");
  width: 950px;
  height: 700px;
}
/* line 273, ../sass/style.scss */
#slide2 .slide-text {
  position: absolute;
  color: #AF2819;
  top: 325px;
  font-size: 30px;
  left: 150px;
}
/* line 280, ../sass/style.scss */
#slide2 .slide-text > :first-child {
  color: white;
  -webkit-transform: rotate(-2deg);
  -moz-transform: rotate(-2deg);
  -ms-transform: rotate(-2deg);
  -o-transform: rotate(-2deg);
  transform: rotate(-2deg);
}
/* line 286, ../sass/style.scss */
#slide2 .slide-text > :first-child em {
  color: #DBBD2D;
  font-style: normal;
}
/* line 292, ../sass/style.scss */
#slide2 .slide-text > :last-child {
  margin-top: 45px;
  margin-left: 100px;
  font-size: 50px;
  color: #DBBD2D;
  font-family: "Bebas";
  text-shadow: black 3px 4px 1px;
  -webkit-transform: rotate(3deg);
  -moz-transform: rotate(3deg);
  -ms-transform: rotate(3deg);
  -o-transform: rotate(3deg);
  transform: rotate(3deg);
}
/* line 304, ../sass/style.scss */
#slide2 #blue-arrow {
  background-repeat: no-repeat;
  height: 200px;
  width: 250px;
  position: absolute;
  top: 480px;
  right: -100px;
  background-image: url("../images/blue-arrow.png");
}

/* line 311, ../sass/style.scss */
#slide3 .container {
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #82251a), color-stop(100%, #eddfdd));
  background-image: -webkit-linear-gradient(#82251a, #eddfdd);
  background-image: -moz-linear-gradient(#82251a, #eddfdd);
  background-image: -o-linear-gradient(#82251a, #eddfdd);
  background-image: linear-gradient(#82251a, #eddfdd);
}
/* line 315, ../sass/style.scss */
#slide3 .content {
  background-image: url("../images/slide3-bg.png");
  width: 950px;
  height: 700px;
}
/* line 321, ../sass/style.scss */
#slide3 .slide-text {
  color: white;
  font-size: 22px;
  width: 700px;
  position: absolute;
  top: 115px;
  left: 200px;
}

/* line 334, ../sass/style.scss */
#slide4 .content {
  background-image: url("../images/slide4-bg.png");
  width: 950px;
  height: 700px;
}
/* line 340, ../sass/style.scss */
#slide4 .slide-text {
  color: #333333;
  font-size: 54px;
  position: absolute;
  top: 340px;
  left: 195px;
}

/* line 351, ../sass/style.scss */
#slide5 .content {
  width: 720px;
  height: 700px;
}
/* line 357, ../sass/style.scss */
#slide5 .text-box {
  background-image: url("../images/slide5-bg.png");
  background-repeat: no-repeat;
  width: 720px;
  height: 250px;
  position: absolute;
  top: 305px;
  left: 80px;
}
/* line 367, ../sass/style.scss */
#slide5 .slide-text {
  margin: auto;
  margin-top: 55px;
  color: #F0D032;
  font-size: 45px;
  width: 600px;
  line-height: normal;
  letter-spacing: 2px;
}
/* line 377, ../sass/style.scss */
#slide5 .mask {
  position: absolute;
  overflow: hidden;
}
/* line 381, ../sass/style.scss */
#slide5 .mask.top {
  width: 900px;
  height: 30px;
  background-color: white;
  position: absolute;
  top: 0px;
}
/* line 389, ../sass/style.scss */
#slide5 .mask.bottom {
  width: 900px;
  height: 40px;
  background-color: white;
  position: absolute;
  top: 670px;
}
/* line 398, ../sass/style.scss */
#slide5 .circle-container {
  position: absolute;
}
/* line 402, ../sass/style.scss */
#slide5 .circle {
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  -ms-border-radius: 50%;
  -o-border-radius: 50%;
  border-radius: 50%;
  background-color: #82251A;
  width: 780px;
  height: 710px;
  z-index: -1;
  left: 125px;
}

/* line 415, ../sass/style.scss */
#slide6 .top-section {
  height: 400px;
}
/* line 419, ../sass/style.scss */
#slide6 .top-section .text-box {
  background-image: url("../images/yellow-text-area.png");
  background-repeat: no-repeat;
  position: absolute;
  top: 50px;
  left: 100px;
  width: 800px;
  height: 225px;
  z-index: 2;
}
/* line 429, ../sass/style.scss */
#slide6 .top-section .text-box .text {
  font-size: 40px;
  width: 660px;
  position: absolute;
  top: 25px;
  left: 30px;
  color: #333333;
}
/* line 439, ../sass/style.scss */
#slide6 .top-section .question {
  position: absolute;
  top: 250px;
  left: 160px;
  line-height: normal;
  font-family: Bebas;
  background-color: #333333;
  padding: 5px 25px 5px 10px;
  -webkit-box-shadow: 2px 2px 10px #333333;
  -moz-box-shadow: 2px 2px 10px #333333;
  box-shadow: 2px 2px 10px #333333;
}
/* line 450, ../sass/style.scss */
#slide6 .top-section .question span {
  color: #33A9DD;
}
/* line 454, ../sass/style.scss */
#slide6 .top-section .question > div {
  color: #DBBD2D;
}
/* line 461, ../sass/style.scss */
#slide6 .bottom-section {
  height: 220px;
}
/* line 464, ../sass/style.scss */
#slide6 .bottom-section .blue-bg-container {
  overflow: hidden;
  height: 200px;
}
/* line 469, ../sass/style.scss */
#slide6 .bottom-section .blue-bg {
  margin-top: 30px;
  height: 1200px;
  width: 2500px;
  background-color: #217DA1;
  -webkit-transform: rotate(-3deg);
  -moz-transform: rotate(-3deg);
  -ms-transform: rotate(-3deg);
  -o-transform: rotate(-3deg);
  transform: rotate(-3deg);
}
/* line 479, ../sass/style.scss */
#slide6 .bottom-section .yellow {
  width: 546px;
  height: 150px;
  left: 170px;
  background-image: url("../images/yellow-text-area-with-border.png");
  background-repeat: no-repeat;
  position: absolute;
  z-index: 1;
}
/* line 488, ../sass/style.scss */
#slide6 .bottom-section .yellow .text {
  width: 380px;
  position: absolute;
  top: 25px;
  left: 80px;
  line-height: normal;
  font-family: Bebas;
  font-size: 30px;
  color: #217DA1;
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.9);
}
/* line 504, ../sass/style.scss */
#slide6 .bottom-section .arrow {
  background-repeat: no-repeat;
  height: 200px;
  width: 250px;
  position: absolute;
  top: 585px;
  right: 0px;
  background-image: url("../images/white-arrow.png");
  z-index: 2;
}

/* line 515, ../sass/style.scss */
#slide7 .blue-bg-container {
  overflow: hidden;
  z-index: -1;
  height: 600px;
}
/* line 521, ../sass/style.scss */
#slide7 .blue-bg {
  margin-top: 135px;
  height: 1200px;
  width: 2500px;
  background-color: #217DA1;
  -webkit-transform: rotate(-3deg);
  -moz-transform: rotate(-3deg);
  -ms-transform: rotate(-3deg);
  -o-transform: rotate(-3deg);
  transform: rotate(-3deg);
}
/* line 531, ../sass/style.scss */
#slide7 .content {
  position: absolute;
  top: 30px;
  left: 150px;
}
/* line 537, ../sass/style.scss */
#slide7 .top {
  position: relative;
  height: 300px;
}
/* line 542, ../sass/style.scss */
#slide7 .top .yellow {
  width: 546px;
  height: 150px;
  left: 100px;
  background-image: url("../images/yellow-text-area-with-border.png");
  background-repeat: no-repeat;
  position: absolute;
  z-index: 100;
}
/* line 551, ../sass/style.scss */
#slide7 .top .yellow .text {
  width: 380px;
  position: absolute;
  top: 25px;
  left: 80px;
  line-height: normal;
  font-family: Bebas;
  font-size: 30px;
  color: white;
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.9);
}
/* line 567, ../sass/style.scss */
#slide7 .top .black {
  width: 780px;
  height: 158px;
  background-image: url("../images/black-text-area.png");
  background-repeat: no-repeat;
  position: absolute;
  top: 105px;
}
/* line 575, ../sass/style.scss */
#slide7 .top .black .text {
  line-height: normal;
  color: white;
  font-size: 20px;
  top: 40px;
  position: absolute;
  left: 37px;
  width: 685px;
}
/* line 584, ../sass/style.scss */
#slide7 .top .black .text span {
  color: #E6C631;
}
/* line 591, ../sass/style.scss */
#slide7 .bottom {
  position: absolute;
  top: 230px;
  width: 750px;
}
/* line 596, ../sass/style.scss */
#slide7 .bottom > div {
  margin: auto;
  margin-bottom: 20px;
  padding: 0px 5px 0px 5px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
/* line 605, ../sass/style.scss */
#slide7 .bottom .red-text-area:first-child {
  text-align: center;
  background-color: #82251A;
  width: 330px;
  font-size: 38px;
  color: #ffffff;
  font-family: Bebas;
}
/* line 609, ../sass/style.scss */
#slide7 .bottom .red-text-area.second {
  text-align: center;
  background-color: #82251A;
  width: 205px;
  font-size: 38px;
  color: #ffffff;
  font-family: Bebas;
}
/* line 615, ../sass/style.scss */
#slide7 .bottom .contact {
  color: #E6C631;
  font-size: 22px;
  text-align: center;
}

/* line 623, ../sass/style.scss */
.impress-on-overview .step {
  opacity: 1;
  cursor: pointer;
}

/*
    Now, when we have all the steps styled let's give users a hint how to navigate
    around the presentation.

    The best way to do this would be to use JavaScript, show a delayed hint for a
    first time users, then hide it and store a status in cookie or localStorage...

    But I wanted to have some CSS fun and avoid additional scripting...

    Let me explain it first, so maybe the transition magic will be more readable
    when you read the code.

    First of all I wanted the hint to appear only when user is idle for a while.
    You can't detect the 'idle' state in CSS, but I delayed a appearing of the
    hint by 5s using transition-delay.

    You also can't detect in CSS if the user is a first-time visitor, so I had to
    make an assumption that I'll only show the hint on the first step. And when
    the step is changed hide the hint, because I can assume that user already
    knows how to navigate.

    To summarize it - hint is shown when the user is on the first step for longer
    than 5 seconds.

    The other problem I had was caused by the fact that I wanted the hint to fade
    in and out. It can be easily achieved by transitioning the opacity property.
    But that also meant that the hint was always on the screen, even if totally
    transparent. It covered part of the screen and you couldn't correctly clicked
    through it.
    Unfortunately you cannot transition between display `block` and `none` in pure
    CSS, so I needed a way to not only fade out the hint but also move it out of
    the screen.

    I solved this problem by positioning the hint below the bottom of the screen
    with CSS transform and moving it up to show it. But I also didn't want this move
    to be visible. I wanted the hint only to fade in and out visually, so I delayed
    the fade in transition, so it starts when the hint is already in its correct
    position on the screen.

    I know, it sounds complicated ... maybe it would be easier with the code?
*/
/* line 670, ../sass/style.scss */
.hint {
  /*
      We hide the hint until presentation is started and from browsers not supporting
      impress.js, as they will have a linear scrollable view ...
  */
  display: none;
  /*
      ... and give it some fixed position and nice styles.
  */
  position: fixed;
  left: 0;
  right: 0;
  bottom: 200px;
  background: rgba(0, 0, 0, 0.5);
  color: #EEE;
  text-align: center;
  font-size: 50px;
  padding: 20px;
  z-index: 100;
  /*
      By default we don't want the hint to be visible, so we make it transparent ...
  */
  opacity: 0;
  /*
      ... and position it below the bottom of the screen (relative to it's fixed position)
  */
  -webkit-transform: translateY(400px);
  -moz-transform: translateY(400px);
  -ms-transform: translateY(400px);
  -o-transform: translateY(400px);
  transform: translateY(400px);
  /*
      Now let's imagine that the hint is visible and we want to fade it out and move out
      of the screen.

      So we define the transition on the opacity property with 1s duration and another
      transition on transform property delayed by 1s so it will happen after the fade out
      on opacity finished.

      This way user will not see the hint moving down.
  */
  -webkit-transition: opacity 1s, -webkit-transform 0.5s 1s;
  -moz-transition: opacity 1s, -moz-transform 0.5s 1s;
  -ms-transition: opacity 1s, -ms-transform 0.5s 1s;
  -o-transition: opacity 1s, -o-transform 0.5s 1s;
  transition: opacity 1s, transform 0.5s 1s;
}

/*
    Now we 'enable' the hint when presentation is initialized ...
*/
/* line 728, ../sass/style.scss */
.impress-enabled .hint {
  display: block;
}

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/
/* line 735, ../sass/style.scss */
.impress-on-bored .hint {
  /*
      We remove the transparency and position the hint in its default fixed
      position.
  */
  opacity: 1;
  -webkit-transform: translateY(0px);
  -moz-transform: translateY(0px);
  -ms-transform: translateY(0px);
  -o-transform: translateY(0px);
  transform: translateY(0px);
  /*
      Now for fade in transition we have the oposite situation from the one
      above.

      First after 4.5s delay we animate the transform property to move the hint
      into its correct position and after that we fade it in with opacity
      transition.
  */
  -webkit-transition: opacity 1s 5s, -webkit-transform 0.5s 4.5s;
  -moz-transition: opacity 1s 5s, -moz-transform 0.5s 4.5s;
  -ms-transition: opacity 1s 5s, -ms-transform 0.5s 4.5s;
  -o-transition: opacity 1s 5s, -o-transform 0.5s 4.5s;
  transition: opacity 1s 5s, transform 0.5s 4.5s;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
/* line 784, ../sass/style.scss */
.impress-enabled {
  pointer-events: none;
}

/* line 788, ../sass/style.scss */
.impress-enabled #impress {
  pointer-events: auto;
}

/*
    There is one funny thing I just realized.

    Thanks to this workaround above everything except #impress element is invisible
    for click events. That means that the hint element is also not clickable.
    So basically all of this transforms and delayed transitions trickery was probably
    not needed at all...

    But it was fun to learn about it, wasn't it?
*/
/*
    That's all I have for you in this file.
    Thanks for reading. I hope you enjoyed it at least as much as I enjoyed writing it
    for you.
*/
